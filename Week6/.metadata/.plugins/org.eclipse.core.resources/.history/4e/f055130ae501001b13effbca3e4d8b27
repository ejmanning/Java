import java.util.Scanner;
public class PasswordValidationManning {
	public static void main(String [] args) {
		
		Scanner in = new Scanner(System.in);
		
		System.out.println("Enter a password: ");
		String password = in.nextLine();
		
		System.out.println("Please confirm your password: ");
		String confirmedPassword = in.nextLine();
		
		System.out.println(validatePassword(password, confirmedPassword));
		
		if (validatePassword(password, confirmedPassword) == true) {
			System.out.println("Password changed");
			
		}
		
		
	}
	
	
	public static boolean validatePassword(String password, String confirmedPassword) {
		boolean valid = true;
		
		while(!password.equals(confirmedPassword)) {
			valid = false;
			System.out.println("Confirmed password is not the same as password");
			return valid;
			
		}
		
		while(!(password.length() >= 8)) {
			valid = false;
			System.out.println("Password must be 8 or more characters");
			return valid;
			
		}
		
		char ch = password.charAt(0);
		
		if (!(Character.isUpperCase(ch)))
        {
            for (int i=0; i<password.length(); i++)
            {       
                ch = password.charAt(i);

                if (!Character.isUpperCase(ch))
                {
                    System.out.println("Invalid password - Must have an Upper Case character.");
                    valid = false;
                }
            }
        }
		
		ch = password.charAt(0);
		
		if (!(Character.isLowerCase(ch)))
        {
            for (int i=0; i<password.length(); i++)
            {       
                ch = password.charAt(i);

                if (!Character.isLowerCase(ch))
                {
                    System.out.println("Invalid password - Must have a lower Case character.");
                    valid = false;
                }
            }
        }
		
		ch = password.charAt(0);
		
		if (!(Character.isDigit(ch)))
        {
            for (int i=0; i<password.length(); i++)
            {       
                ch = password.charAt(i);

                if (!Character.isDigit(ch))
                {
                    System.out.println("Invalid password - Must have a digit.");
                    valid = false;
                }
            }
        }
		
		return valid;
	}
}
